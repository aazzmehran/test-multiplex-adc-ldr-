
AVRASM ver. 2.1.30  E:\avr\test_ldr\Debug\List\test_ldr.asm Tue Jul 18 16:10:31 2017

E:\avr\test_ldr\Debug\List\test_ldr.asm(1086): warning: Register r4 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1087): warning: Register r5 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1088): warning: Register r6 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1089): warning: Register r7 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1090): warning: Register r8 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1091): warning: Register r9 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1092): warning: Register r10 already defined by the .DEF directive
E:\avr\test_ldr\Debug\List\test_ldr.asm(1093): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _L_1=R4
                 	.DEF _L_1_msb=R5
                 	.DEF _L_2=R6
                 	.DEF _L_2_msb=R7
                 	.DEF _L_3=R8
                 	.DEF _L_3_msb=R9
                 	.DEF _L_4=R10
                 	.DEF _L_4_msb=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c02f      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _tbl10_G100:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001c 444c
00001d 5f52
00001e 3d31
00001f 6925      	.DB  0x4C,0x44,0x52,0x5F,0x31,0x3D,0x25,0x69
000020 000d
000021 444c
000022 5f52
000023 3d32      	.DB  0xD,0x0,0x4C,0x44,0x52,0x5F,0x32,0x3D
000024 6925
000025 000d
000026 444c
000027 5f52      	.DB  0x25,0x69,0xD,0x0,0x4C,0x44,0x52,0x5F
000028 3d33
000029 6925
00002a 000d
00002b 444c      	.DB  0x33,0x3D,0x25,0x69,0xD,0x0,0x4C,0x44
00002c 5f52
00002d 3d34
00002e 6925
00002f 000d      	.DB  0x52,0x5F,0x34,0x3D,0x25,0x69,0xD,0x0
                 __RESET:
000030 94f8      	CLI
000031 27ee      	CLR  R30
000032 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000033 e0f1      	LDI  R31,1
000034 bffb      	OUT  GICR,R31
000035 bfeb      	OUT  GICR,R30
000036 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000037 e08d      	LDI  R24,(14-2)+1
000038 e0a2      	LDI  R26,2
000039 27bb      	CLR  R27
                 __CLEAR_REG:
00003a 93ed      	ST   X+,R30
00003b 958a      	DEC  R24
00003c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00003e e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00003f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000040 93ed      	ST   X+,R30
000041 9701      	SBIW R24,1
000042 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000043 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000044 bfed      	OUT  SPL,R30
000045 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000046 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000047 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000048 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000049 c048      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/***********test_ldr 1396/4/27***********************mehran_ayan****************************************************/
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;char buffer[20];
                 ;int L_1,L_2,L_3,L_4;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 000A {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 000B ADMUX=adc_input | ADC_VREF_TYPE;
00004a 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00004b 81e8      	LD   R30,Y
00004c 64e0      	ORI  R30,0x40
00004d b9e7      	OUT  0x7,R30
                 ; 0000 000C delay_us(10);
                +
00004e e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00004f 958a     +DEC R24
000050 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 000D ADCSRA|=(1<<ADSC);
000051 9a36      	SBI  0x6,6
                 ; 0000 000E while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
000052 9b34      	SBIS 0x6,4
000053 cffe      	RJMP _0x3
                 ; 0000 000F ADCSRA|=(1<<ADIF);
000054 9a34      	SBI  0x6,4
                 ; 0000 0010 return ADCW;
000055 b1e4      	IN   R30,0x4
000056 b1f5      	IN   R31,0x4+1
000057 c05b      	RJMP _0x2060003
                 ; 0000 0011 }
                 ; .FEND
                 ;void LDR(void)//************************************start LDR********************************************//
                 ; 0000 0013 {
                 _LDR:
                 ; .FSTART _LDR
                 ; 0000 0014 ///////////////////////////////////ldr1//////////////////////////////
                 ; 0000 0015       delay_ms(10);
000058 d212      	RCALL SUBOPT_0x0
                 ; 0000 0016       PORTB.0=1; PORTB.1=0; PORTB.2=0; PORTB.3=0;
000059 9ac0      	SBI  0x18,0
00005a 98c1      	CBI  0x18,1
00005b d212      	RCALL SUBOPT_0x1
                 ; 0000 0017       L_1=read_adc(0);
00005c 012f      	MOVW R4,R30
                 ; 0000 0018 ///////////////////////////////////ldr2///////////////////////////////
                 ; 0000 0019       delay_ms(10);
00005d d20d      	RCALL SUBOPT_0x0
                 ; 0000 001A       PORTB.0=0; PORTB.1=1; PORTB.2=0; PORTB.3=0;
00005e 98c0      	CBI  0x18,0
00005f 9ac1      	SBI  0x18,1
000060 d20d      	RCALL SUBOPT_0x1
                 ; 0000 001B       L_2=read_adc(0);
000061 013f      	MOVW R6,R30
                 ; 0000 001C /////////////////////////////////ldr3////////////////////////////////
                 ; 0000 001D       delay_ms(10);
000062 d208      	RCALL SUBOPT_0x0
                 ; 0000 001E       PORTB.0=0; PORTB.1=0; PORTB.2=1; PORTB.3=0;
000063 98c0      	CBI  0x18,0
000064 98c1      	CBI  0x18,1
000065 9ac2      	SBI  0x18,2
000066 98c3      	CBI  0x18,3
                 ; 0000 001F       L_3=read_adc(0);
000067 e0a0      	LDI  R26,LOW(0)
000068 dfe1      	RCALL _read_adc
000069 014f      	MOVW R8,R30
                 ; 0000 0020 /////////////////////////////////ldr4////////////////////////////////
                 ; 0000 0021       delay_ms(10);
00006a d200      	RCALL SUBOPT_0x0
                 ; 0000 0022       PORTB.0=0; PORTB.1=0; PORTB.2=0; PORTB.3=1;
00006b 98c0      	CBI  0x18,0
00006c 98c1      	CBI  0x18,1
00006d 98c2      	CBI  0x18,2
00006e 9ac3      	SBI  0x18,3
                 ; 0000 0023       L_4=read_adc(0);
00006f e0a0      	LDI  R26,LOW(0)
000070 dfd9      	RCALL _read_adc
000071 015f      	MOVW R10,R30
                 ; 0000 0024 /////////////////////////////////////////////////////////////////////
                 ; 0000 0025       sprintf(buffer,"LDR_1=%i\r",L_1);
000072 d1ff      	RCALL SUBOPT_0x2
                +
000073 e3e8     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000074 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000075 d201      	RCALL SUBOPT_0x3
000076 01f2      	MOVW R30,R4
000077 d202      	RCALL SUBOPT_0x4
                 ; 0000 0026        puts(buffer);
                 ; 0000 0027        sprintf(buffer,"LDR_2=%i\r",L_2);
                +
000078 e4e2     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
000079 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
00007a d1fc      	RCALL SUBOPT_0x3
00007b 01f3      	MOVW R30,R6
00007c d1fd      	RCALL SUBOPT_0x4
                 ; 0000 0028        puts(buffer);
                 ; 0000 0029        sprintf(buffer,"LDR_3=%i\r",L_3);
                +
00007d e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
00007e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
00007f d1f7      	RCALL SUBOPT_0x3
000080 01f4      	MOVW R30,R8
000081 d1f8      	RCALL SUBOPT_0x4
                 ; 0000 002A        puts(buffer);
                 ; 0000 002B        sprintf(buffer,"LDR_4=%i\r",L_4);
                +
000082 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 30 ) )
000083 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 30 ) )
                 	__POINTW1FN _0x0,30
000084 d1f2      	RCALL SUBOPT_0x3
000085 01f5      	MOVW R30,R10
000086 d253      	RCALL __CWD1
000087 d25f      	RCALL __PUTPARD1
000088 e084      	LDI  R24,4
000089 d18a      	RCALL _sprintf
00008a 9628      	ADIW R28,8
                 ; 0000 002C        puts(buffer);
00008b e6a0      	LDI  R26,LOW(_buffer)
00008c e0b1      	LDI  R27,HIGH(_buffer)
00008d d027      	RCALL _puts
                 ; 0000 002D        printf("\r");
00008e d1f4      	RCALL SUBOPT_0x5
                 ; 0000 002E        printf("\r");
00008f d1f3      	RCALL SUBOPT_0x5
                 ; 0000 002F        printf("\r");
000090 d1f2      	RCALL SUBOPT_0x5
                 ; 0000 0030 
                 ; 0000 0031 }//*************************************************end LDR**********************************************//
000091 9508      	RET
                 ; .FEND
                 ;void main(void)//***********************************start main*******************************************//
                 ; 0000 0033 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0034 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000092 e0ef      	LDI  R30,LOW(15)
000093 bbe7      	OUT  0x17,R30
                 ; 0000 0035 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000094 e0e0      	LDI  R30,LOW(0)
000095 bbe8      	OUT  0x18,R30
                 ; 0000 0036 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
000096 bfe9      	OUT  0x39,R30
                 ; 0000 0037 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000097 b9eb      	OUT  0xB,R30
                 ; 0000 0038 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000098 e1e8      	LDI  R30,LOW(24)
000099 b9ea      	OUT  0xA,R30
                 ; 0000 0039 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
00009a e8e6      	LDI  R30,LOW(134)
00009b bde0      	OUT  0x20,R30
                 ; 0000 003A UBRRH=0x00;
00009c e0e0      	LDI  R30,LOW(0)
00009d bde0      	OUT  0x20,R30
                 ; 0000 003B UBRRL=0x33;
00009e e3e3      	LDI  R30,LOW(51)
00009f b9e9      	OUT  0x9,R30
                 ; 0000 003C ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000a0 e8e0      	LDI  R30,LOW(128)
0000a1 b9e8      	OUT  0x8,R30
                 ; 0000 003D ADMUX=ADC_VREF_TYPE;
0000a2 e4e0      	LDI  R30,LOW(64)
0000a3 b9e7      	OUT  0x7,R30
                 ; 0000 003E ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (1<<ADPS0);
0000a4 e8e5      	LDI  R30,LOW(133)
0000a5 b9e6      	OUT  0x6,R30
                 ; 0000 003F SFIOR=(0<<ACME);
0000a6 e0e0      	LDI  R30,LOW(0)
0000a7 bfe0      	OUT  0x30,R30
                 ; 0000 0040 while (1)
                 _0x26:
                 ; 0000 0041       {
                 ; 0000 0042       LDR();
0000a8 dfaf      	RCALL _LDR
                 ; 0000 0043       delay_ms(1000);
0000a9 eea8      	LDI  R26,LOW(1000)
0000aa e0b3      	LDI  R27,HIGH(1000)
0000ab d21c      	RCALL _delay_ms
                 ; 0000 0044       }//***********************************************end while******************************************************/ ...
0000ac cffb      	RJMP _0x26
                 ; 0000 0045 }//***************************************************end main*********************************************************/ ...
                 _0x29:
0000ad cfff      	RJMP _0x29
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000ae 93aa      	ST   -Y,R26
                 putchar0:
0000af 9b5d           sbis usr,udre
0000b0 cffe           rjmp putchar0
0000b1 81e8           ld   r30,y
0000b2 b9ec           out  udr,r30
                 _0x2060003:
0000b3 9621      	ADIW R28,1
0000b4 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
0000b5 d1d4      	RCALL SUBOPT_0x6
0000b6 931a      	ST   -Y,R17
                 _0x2000003:
0000b7 81a9      	LDD  R26,Y+1
0000b8 81ba      	LDD  R27,Y+1+1
0000b9 91ed      	LD   R30,X+
0000ba 83a9      	STD  Y+1,R26
0000bb 83ba      	STD  Y+1+1,R27
0000bc 2f1e      	MOV  R17,R30
0000bd 30e0      	CPI  R30,0
0000be f019      	BREQ _0x2000005
0000bf 2fa1      	MOV  R26,R17
0000c0 dfed      	RCALL _putchar
0000c1 cff5      	RJMP _0x2000003
                 _0x2000005:
0000c2 e0aa      	LDI  R26,LOW(10)
0000c3 dfea      	RCALL _putchar
0000c4 8118      	LDD  R17,Y+0
0000c5 c006      	RJMP _0x2060002
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000c6 d1c3      	RCALL SUBOPT_0x6
0000c7 81aa      	LDD  R26,Y+2
0000c8 dfe5      	RCALL _putchar
0000c9 81a8      	LD   R26,Y
0000ca 81b9      	LDD  R27,Y+1
0000cb d1c1      	RCALL SUBOPT_0x7
                 _0x2060002:
0000cc 9623      	ADIW R28,3
0000cd 9508      	RET
                 ; .FEND
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0000ce d1bb      	RCALL SUBOPT_0x6
0000cf d220      	RCALL __SAVELOCR2
0000d0 d1c2      	RCALL SUBOPT_0x8
0000d1 9612      	ADIW R26,2
0000d2 d20c      	RCALL __GETW1P
0000d3 9730      	SBIW R30,0
0000d4 f0f1      	BREQ _0x2000010
0000d5 d1bd      	RCALL SUBOPT_0x8
0000d6 d1bf      	RCALL SUBOPT_0x9
0000d7 018f      	MOVW R16,R30
0000d8 9730      	SBIW R30,0
0000d9 f061      	BREQ _0x2000012
                +
0000da 3002     +CPI R16 , LOW ( 2 )
0000db e0e0     +LDI R30 , HIGH ( 2 )
0000dc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0000dd f070      	BRLO _0x2000013
0000de 01f8      	MOVW R30,R16
0000df 9731      	SBIW R30,1
0000e0 018f      	MOVW R16,R30
                +
0000e1 81aa     +LDD R26 , Y + 2
0000e2 81bb     +LDD R27 , Y + 2 + 1
0000e3 9614     +ADIW R26 , 4
0000e4 93ed     +ST X + , R30
0000e5 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0000e6 d1ac      	RCALL SUBOPT_0x8
0000e7 9612      	ADIW R26,2
0000e8 d1a4      	RCALL SUBOPT_0x7
0000e9 9731      	SBIW R30,1
0000ea 81ac      	LDD  R26,Y+4
0000eb 83a0      	STD  Z+0,R26
                 _0x2000013:
0000ec d1a6      	RCALL SUBOPT_0x8
0000ed d1f1      	RCALL __GETW1P
0000ee 23ff      	TST  R31
0000ef f012      	BRMI _0x2000014
0000f0 d1a2      	RCALL SUBOPT_0x8
0000f1 d19b      	RCALL SUBOPT_0x7
                 _0x2000014:
0000f2 c005      	RJMP _0x2000015
                 _0x2000010:
0000f3 d19f      	RCALL SUBOPT_0x8
0000f4 efef      	LDI  R30,LOW(65535)
0000f5 efff      	LDI  R31,HIGH(65535)
0000f6 93ed      	ST   X+,R30
0000f7 93fc      	ST   X,R31
                 _0x2000015:
0000f8 d1fe      	RCALL __LOADLOCR2
0000f9 9625      	ADIW R28,5
0000fa 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000fb d18e      	RCALL SUBOPT_0x6
0000fc 9726      	SBIW R28,6
0000fd d1ee      	RCALL __SAVELOCR6
0000fe e010      	LDI  R17,0
0000ff 85ac      	LDD  R26,Y+12
000100 85bd      	LDD  R27,Y+12+1
000101 e0e0      	LDI  R30,LOW(0)
000102 e0f0      	LDI  R31,HIGH(0)
000103 93ed      	ST   X+,R30
000104 93fc      	ST   X,R31
                 _0x2000016:
000105 89ea      	LDD  R30,Y+18
000106 89fb      	LDD  R31,Y+18+1
000107 9631      	ADIW R30,1
000108 8bea      	STD  Y+18,R30
000109 8bfb      	STD  Y+18+1,R31
00010a 9731      	SBIW R30,1
00010b 91e4      	LPM  R30,Z
00010c 2f2e      	MOV  R18,R30
00010d 30e0      	CPI  R30,0
00010e f409      	BRNE PC+2
00010f c0fe      	RJMP _0x2000018
000110 2fe1      	MOV  R30,R17
000111 30e0      	CPI  R30,0
000112 f431      	BRNE _0x200001C
000113 3225      	CPI  R18,37
000114 f411      	BRNE _0x200001D
000115 e011      	LDI  R17,LOW(1)
000116 c001      	RJMP _0x200001E
                 _0x200001D:
000117 d181      	RCALL SUBOPT_0xA
                 _0x200001E:
000118 c0f4      	RJMP _0x200001B
                 _0x200001C:
000119 30e1      	CPI  R30,LOW(0x1)
00011a f4a1      	BRNE _0x200001F
00011b 3225      	CPI  R18,37
00011c f411      	BRNE _0x2000020
00011d d17b      	RCALL SUBOPT_0xA
00011e c0ed      	RJMP _0x20000CC
                 _0x2000020:
00011f e012      	LDI  R17,LOW(2)
000120 e040      	LDI  R20,LOW(0)
000121 e000      	LDI  R16,LOW(0)
000122 322d      	CPI  R18,45
000123 f411      	BRNE _0x2000021
000124 e001      	LDI  R16,LOW(1)
000125 c0e7      	RJMP _0x200001B
                 _0x2000021:
000126 322b      	CPI  R18,43
000127 f411      	BRNE _0x2000022
000128 e24b      	LDI  R20,LOW(43)
000129 c0e3      	RJMP _0x200001B
                 _0x2000022:
00012a 3220      	CPI  R18,32
00012b f411      	BRNE _0x2000023
00012c e240      	LDI  R20,LOW(32)
00012d c0df      	RJMP _0x200001B
                 _0x2000023:
00012e c002      	RJMP _0x2000024
                 _0x200001F:
00012f 30e2      	CPI  R30,LOW(0x2)
000130 f439      	BRNE _0x2000025
                 _0x2000024:
000131 e050      	LDI  R21,LOW(0)
000132 e013      	LDI  R17,LOW(3)
000133 3320      	CPI  R18,48
000134 f411      	BRNE _0x2000026
000135 6800      	ORI  R16,LOW(128)
000136 c0d6      	RJMP _0x200001B
                 _0x2000026:
000137 c003      	RJMP _0x2000027
                 _0x2000025:
000138 30e3      	CPI  R30,LOW(0x3)
000139 f009      	BREQ PC+2
00013a c0d2      	RJMP _0x200001B
                 _0x2000027:
00013b 3320      	CPI  R18,48
00013c f010      	BRLO _0x200002A
00013d 332a      	CPI  R18,58
00013e f008      	BRLO _0x200002B
                 _0x200002A:
00013f c007      	RJMP _0x2000029
                 _0x200002B:
000140 e0aa      	LDI  R26,LOW(10)
000141 9f5a      	MUL  R21,R26
000142 2d50      	MOV  R21,R0
000143 2fe2      	MOV  R30,R18
000144 53e0      	SUBI R30,LOW(48)
000145 0f5e      	ADD  R21,R30
000146 c0c6      	RJMP _0x200001B
                 _0x2000029:
000147 2fe2      	MOV  R30,R18
000148 36e3      	CPI  R30,LOW(0x63)
000149 f439      	BRNE _0x200002F
00014a d155      	RCALL SUBOPT_0xB
00014b d157      	RCALL SUBOPT_0xC
00014c d153      	RCALL SUBOPT_0xB
00014d 81a4      	LDD  R26,Z+4
00014e 93aa      	ST   -Y,R26
00014f d157      	RCALL SUBOPT_0xD
000150 c0bb      	RJMP _0x2000030
                 _0x200002F:
000151 37e3      	CPI  R30,LOW(0x73)
000152 f431      	BRNE _0x2000032
000153 d159      	RCALL SUBOPT_0xE
000154 d15a      	RCALL SUBOPT_0xF
000155 d15c      	RCALL SUBOPT_0x10
000156 d0fd      	RCALL _strlen
000157 2f1e      	MOV  R17,R30
000158 c008      	RJMP _0x2000033
                 _0x2000032:
000159 37e0      	CPI  R30,LOW(0x70)
00015a f451      	BRNE _0x2000035
00015b d151      	RCALL SUBOPT_0xE
00015c d152      	RCALL SUBOPT_0xF
00015d d154      	RCALL SUBOPT_0x10
00015e d100      	RCALL _strlenf
00015f 2f1e      	MOV  R17,R30
000160 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000161 6002      	ORI  R16,LOW(2)
000162 770f      	ANDI R16,LOW(127)
000163 e030      	LDI  R19,LOW(0)
000164 c02e      	RJMP _0x2000036
                 _0x2000035:
000165 36e4      	CPI  R30,LOW(0x64)
000166 f011      	BREQ _0x2000039
000167 36e9      	CPI  R30,LOW(0x69)
000168 f411      	BRNE _0x200003A
                 _0x2000039:
000169 6004      	ORI  R16,LOW(4)
00016a c002      	RJMP _0x200003B
                 _0x200003A:
00016b 37e5      	CPI  R30,LOW(0x75)
00016c f429      	BRNE _0x200003C
                 _0x200003B:
00016d e2e6      	LDI  R30,LOW(_tbl10_G100*2)
00016e e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00016f d147      	RCALL SUBOPT_0x11
000170 e015      	LDI  R17,LOW(5)
000171 c00b      	RJMP _0x200003D
                 _0x200003C:
000172 35e8      	CPI  R30,LOW(0x58)
000173 f411      	BRNE _0x200003F
000174 6008      	ORI  R16,LOW(8)
000175 c003      	RJMP _0x2000040
                 _0x200003F:
000176 37e8      	CPI  R30,LOW(0x78)
000177 f009      	BREQ PC+2
000178 c093      	RJMP _0x2000071
                 _0x2000040:
000179 e3e0      	LDI  R30,LOW(_tbl16_G100*2)
00017a e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00017b d13b      	RCALL SUBOPT_0x11
00017c e014      	LDI  R17,LOW(4)
                 _0x200003D:
00017d ff02      	SBRS R16,2
00017e c011      	RJMP _0x2000042
00017f d12d      	RCALL SUBOPT_0xE
000180 d12e      	RCALL SUBOPT_0xF
000181 d138      	RCALL SUBOPT_0x12
000182 85ab      	LDD  R26,Y+11
000183 23aa      	TST  R26
000184 f42a      	BRPL _0x2000043
000185 85ea      	LDD  R30,Y+10
000186 85fb      	LDD  R31,Y+10+1
000187 d14e      	RCALL __ANEGW1
000188 d131      	RCALL SUBOPT_0x12
000189 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00018a 3040      	CPI  R20,0
00018b f011      	BREQ _0x2000044
00018c 5f1f      	SUBI R17,-LOW(1)
00018d c001      	RJMP _0x2000045
                 _0x2000044:
00018e 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
00018f c003      	RJMP _0x2000046
                 _0x2000042:
000190 d11c      	RCALL SUBOPT_0xE
000191 d11d      	RCALL SUBOPT_0xF
000192 d127      	RCALL SUBOPT_0x12
                 _0x2000046:
                 _0x2000036:
000193 fd00      	SBRC R16,0
000194 c010      	RJMP _0x2000047
                 _0x2000048:
000195 1715      	CP   R17,R21
000196 f470      	BRSH _0x200004A
000197 ff07      	SBRS R16,7
000198 c008      	RJMP _0x200004B
000199 ff02      	SBRS R16,2
00019a c004      	RJMP _0x200004C
00019b 7f0b      	ANDI R16,LOW(251)
00019c 2f24      	MOV  R18,R20
00019d 5011      	SUBI R17,LOW(1)
00019e c001      	RJMP _0x200004D
                 _0x200004C:
00019f e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001a0 c001      	RJMP _0x200004E
                 _0x200004B:
0001a1 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001a2 d0f6      	RCALL SUBOPT_0xA
0001a3 5051      	SUBI R21,LOW(1)
0001a4 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001a5 2f31      	MOV  R19,R17
0001a6 ff01      	SBRS R16,1
0001a7 c015      	RJMP _0x200004F
                 _0x2000050:
0001a8 3030      	CPI  R19,0
0001a9 f091      	BREQ _0x2000052
0001aa ff03      	SBRS R16,3
0001ab c005      	RJMP _0x2000053
0001ac 81ee      	LDD  R30,Y+6
0001ad 81ff      	LDD  R31,Y+6+1
0001ae 9125      	LPM  R18,Z+
0001af d107      	RCALL SUBOPT_0x11
0001b0 c005      	RJMP _0x2000054
                 _0x2000053:
0001b1 81ae      	LDD  R26,Y+6
0001b2 81bf      	LDD  R27,Y+6+1
0001b3 912d      	LD   R18,X+
0001b4 83ae      	STD  Y+6,R26
0001b5 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001b6 d0e2      	RCALL SUBOPT_0xA
0001b7 3050      	CPI  R21,0
0001b8 f009      	BREQ _0x2000055
0001b9 5051      	SUBI R21,LOW(1)
                 _0x2000055:
0001ba 5031      	SUBI R19,LOW(1)
0001bb cfec      	RJMP _0x2000050
                 _0x2000052:
0001bc c046      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
0001bd e320      	LDI  R18,LOW(48)
0001be 81ee      	LDD  R30,Y+6
0001bf 81ff      	LDD  R31,Y+6+1
0001c0 d122      	RCALL __GETW1PF
0001c1 87e8      	STD  Y+8,R30
0001c2 87f9      	STD  Y+8+1,R31
0001c3 81ee      	LDD  R30,Y+6
0001c4 81ff      	LDD  R31,Y+6+1
0001c5 9632      	ADIW R30,2
0001c6 d0f0      	RCALL SUBOPT_0x11
                 _0x200005A:
0001c7 85e8      	LDD  R30,Y+8
0001c8 85f9      	LDD  R31,Y+8+1
0001c9 85aa      	LDD  R26,Y+10
0001ca 85bb      	LDD  R27,Y+10+1
0001cb 17ae      	CP   R26,R30
0001cc 07bf      	CPC  R27,R31
0001cd f048      	BRLO _0x200005C
0001ce 5f2f      	SUBI R18,-LOW(1)
0001cf 85a8      	LDD  R26,Y+8
0001d0 85b9      	LDD  R27,Y+8+1
0001d1 85ea      	LDD  R30,Y+10
0001d2 85fb      	LDD  R31,Y+10+1
0001d3 1bea      	SUB  R30,R26
0001d4 0bfb      	SBC  R31,R27
0001d5 d0e4      	RCALL SUBOPT_0x12
0001d6 cff0      	RJMP _0x200005A
                 _0x200005C:
0001d7 332a      	CPI  R18,58
0001d8 f028      	BRLO _0x200005D
0001d9 ff03      	SBRS R16,3
0001da c002      	RJMP _0x200005E
0001db 5f29      	SUBI R18,-LOW(7)
0001dc c001      	RJMP _0x200005F
                 _0x200005E:
0001dd 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001de fd04      	SBRC R16,4
0001df c019      	RJMP _0x2000061
0001e0 3321      	CPI  R18,49
0001e1 f420      	BRSH _0x2000063
0001e2 85a8      	LDD  R26,Y+8
0001e3 85b9      	LDD  R27,Y+8+1
0001e4 9711      	SBIW R26,1
0001e5 f409      	BRNE _0x2000062
                 _0x2000063:
0001e6 c009      	RJMP _0x20000CD
                 _0x2000062:
0001e7 1753      	CP   R21,R19
0001e8 f010      	BRLO _0x2000067
0001e9 ff00      	SBRS R16,0
0001ea c001      	RJMP _0x2000068
                 _0x2000067:
0001eb c011      	RJMP _0x2000066
                 _0x2000068:
0001ec e220      	LDI  R18,LOW(32)
0001ed ff07      	SBRS R16,7
0001ee c00a      	RJMP _0x2000069
0001ef e320      	LDI  R18,LOW(48)
                 _0x20000CD:
0001f0 6100      	ORI  R16,LOW(16)
0001f1 ff02      	SBRS R16,2
0001f2 c006      	RJMP _0x200006A
0001f3 7f0b      	ANDI R16,LOW(251)
0001f4 934a      	ST   -Y,R20
0001f5 d0b1      	RCALL SUBOPT_0xD
0001f6 3050      	CPI  R21,0
0001f7 f009      	BREQ _0x200006B
0001f8 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001f9 d09f      	RCALL SUBOPT_0xA
0001fa 3050      	CPI  R21,0
0001fb f009      	BREQ _0x200006C
0001fc 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001fd 5031      	SUBI R19,LOW(1)
0001fe 85a8      	LDD  R26,Y+8
0001ff 85b9      	LDD  R27,Y+8+1
000200 9712      	SBIW R26,2
000201 f008      	BRLO _0x2000059
000202 cfba      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000203 ff00      	SBRS R16,0
000204 c007      	RJMP _0x200006D
                 _0x200006E:
000205 3050      	CPI  R21,0
000206 f029      	BREQ _0x2000070
000207 5051      	SUBI R21,LOW(1)
000208 e2e0      	LDI  R30,LOW(32)
000209 93ea      	ST   -Y,R30
00020a d09c      	RCALL SUBOPT_0xD
00020b cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
00020c e010      	LDI  R17,LOW(0)
                 _0x200001B:
00020d cef7      	RJMP _0x2000016
                 _0x2000018:
00020e 85ac      	LDD  R26,Y+12
00020f 85bd      	LDD  R27,Y+12+1
000210 d0ce      	RCALL __GETW1P
000211 d0e1      	RCALL __LOADLOCR6
000212 9664      	ADIW R28,20
000213 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000214 92ff      	PUSH R15
000215 2ef8      	MOV  R15,R24
000216 9726      	SBIW R28,6
000217 d0d6      	RCALL __SAVELOCR4
000218 d0a4      	RCALL SUBOPT_0x13
000219 9730      	SBIW R30,0
00021a f419      	BRNE _0x2000072
00021b efef      	LDI  R30,LOW(65535)
00021c efff      	LDI  R31,HIGH(65535)
00021d c018      	RJMP _0x2060001
                 _0x2000072:
00021e 01de      	MOVW R26,R28
00021f 9616      	ADIW R26,6
000220 d0b1      	RCALL __ADDW2R15
000221 018d      	MOVW R16,R26
000222 d09a      	RCALL SUBOPT_0x13
000223 d093      	RCALL SUBOPT_0x11
000224 e0e0      	LDI  R30,LOW(0)
000225 87e8      	STD  Y+8,R30
000226 87e9      	STD  Y+8+1,R30
000227 01de      	MOVW R26,R28
000228 961a      	ADIW R26,10
000229 d098      	RCALL SUBOPT_0x14
00022a ecee      	LDI  R30,LOW(_put_buff_G100)
00022b e0f0      	LDI  R31,HIGH(_put_buff_G100)
00022c d04a      	RCALL SUBOPT_0x3
00022d 01de      	MOVW R26,R28
00022e 961a      	ADIW R26,10
00022f decb      	RCALL __print_G100
000230 019f      	MOVW R18,R30
000231 81ae      	LDD  R26,Y+6
000232 81bf      	LDD  R27,Y+6+1
000233 e0e0      	LDI  R30,LOW(0)
000234 93ec      	ST   X,R30
000235 01f9      	MOVW R30,R18
                 _0x2060001:
000236 d0be      	RCALL __LOADLOCR4
000237 962a      	ADIW R28,10
000238 90ff      	POP  R15
000239 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00023a 92ff      	PUSH R15
00023b 2ef8      	MOV  R15,R24
00023c 9726      	SBIW R28,6
00023d d0b2      	RCALL __SAVELOCR2
00023e 01de      	MOVW R26,R28
00023f 9614      	ADIW R26,4
000240 d091      	RCALL __ADDW2R15
000241 018d      	MOVW R16,R26
000242 e0e0      	LDI  R30,LOW(0)
000243 83ec      	STD  Y+4,R30
000244 83ed      	STD  Y+4+1,R30
000245 83ee      	STD  Y+6,R30
000246 83ef      	STD  Y+6+1,R30
000247 01de      	MOVW R26,R28
000248 9618      	ADIW R26,8
000249 d078      	RCALL SUBOPT_0x14
00024a ece6      	LDI  R30,LOW(_put_usart_G100)
00024b e0f0      	LDI  R31,HIGH(_put_usart_G100)
00024c d02a      	RCALL SUBOPT_0x3
00024d 01de      	MOVW R26,R28
00024e 9618      	ADIW R26,8
00024f deab      	RCALL __print_G100
000250 d0a6      	RCALL __LOADLOCR2
000251 9628      	ADIW R28,8
000252 90ff      	POP  R15
000253 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000254 d035      	RCALL SUBOPT_0x6
000255 91a9          ld   r26,y+
000256 91b9          ld   r27,y+
000257 27ee          clr  r30
000258 27ff          clr  r31
                 strlen0:
000259 916d          ld   r22,x+
00025a 2366          tst  r22
00025b f011          breq strlen1
00025c 9631          adiw r30,1
00025d cffb          rjmp strlen0
                 strlen1:
00025e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00025f d02a      	RCALL SUBOPT_0x6
000260 27aa          clr  r26
000261 27bb          clr  r27
000262 91e9          ld   r30,y+
000263 91f9          ld   r31,y+
                 strlenf0:
000264 9005      	lpm  r0,z+
000265 2000          tst  r0
000266 f011          breq strlenf1
000267 9611          adiw r26,1
000268 cffb          rjmp strlenf0
                 strlenf1:
000269 01fd          movw r30,r26
00026a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _buffer:
000160           	.BYTE 0x14
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
00026b e0aa      	LDI  R26,LOW(10)
00026c e0b0      	LDI  R27,0
00026d c05a      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00026e 98c2      	CBI  0x18,2
00026f 98c3      	CBI  0x18,3
000270 e0a0      	LDI  R26,LOW(0)
000271 cdd8      	RJMP _read_adc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000272 e6e0      	LDI  R30,LOW(_buffer)
000273 e0f1      	LDI  R31,HIGH(_buffer)
000274 93fa      	ST   -Y,R31
000275 93ea      	ST   -Y,R30
000276 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
000277 93fa      	ST   -Y,R31
000278 93ea      	ST   -Y,R30
000279 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x4:
00027a d05f      	RCALL __CWD1
00027b d06b      	RCALL __PUTPARD1
00027c e084      	LDI  R24,4
00027d df96      	RCALL _sprintf
00027e 9628      	ADIW R28,8
00027f e6a0      	LDI  R26,LOW(_buffer)
000280 e0b1      	LDI  R27,HIGH(_buffer)
000281 de33      	RCALL _puts
000282 cfef      	RJMP SUBOPT_0x2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
                +
000283 e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 8 ) )
000284 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW1FN _0x0,8
000285 dff1      	RCALL SUBOPT_0x3
000286 e080      	LDI  R24,0
000287 dfb2      	RCALL _printf
000288 9622      	ADIW R28,2
000289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00028a 93ba      	ST   -Y,R27
00028b 93aa      	ST   -Y,R26
00028c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00028d 91ed      	LD   R30,X+
00028e 91fd      	LD   R31,X+
00028f 9631      	ADIW R30,1
000290 93fe      	ST   -X,R31
000291 93ee      	ST   -X,R30
000292 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000293 81aa      	LDD  R26,Y+2
000294 81bb      	LDD  R27,Y+2+1
000295 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
000296 9614      	ADIW R26,4
000297 d047      	RCALL __GETW1P
000298 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xA:
000299 932a      	ST   -Y,R18
00029a 85ad      	LDD  R26,Y+13
00029b 85be      	LDD  R27,Y+13+1
00029c 85ef      	LDD  R30,Y+15
00029d 89f8      	LDD  R31,Y+15+1
00029e 9509      	ICALL
00029f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
0002a0 89e8      	LDD  R30,Y+16
0002a1 89f9      	LDD  R31,Y+16+1
0002a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
0002a3 9734      	SBIW R30,4
0002a4 8be8      	STD  Y+16,R30
0002a5 8bf9      	STD  Y+16+1,R31
0002a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xD:
0002a7 85ad      	LDD  R26,Y+13
0002a8 85be      	LDD  R27,Y+13+1
0002a9 85ef      	LDD  R30,Y+15
0002aa 89f8      	LDD  R31,Y+15+1
0002ab 9509      	ICALL
0002ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
0002ad dff2      	RCALL SUBOPT_0xB
0002ae cff4      	RJMP SUBOPT_0xC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
0002af 89a8      	LDD  R26,Y+16
0002b0 89b9      	LDD  R27,Y+16+1
0002b1 cfe4      	RJMP SUBOPT_0x9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
0002b2 83ee      	STD  Y+6,R30
0002b3 83ff      	STD  Y+6+1,R31
0002b4 81ae      	LDD  R26,Y+6
0002b5 81bf      	LDD  R27,Y+6+1
0002b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
0002b7 83ee      	STD  Y+6,R30
0002b8 83ff      	STD  Y+6+1,R31
0002b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
0002ba 87ea      	STD  Y+10,R30
0002bb 87fb      	STD  Y+10+1,R31
0002bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
0002bd 01de      	MOVW R26,R28
0002be 961c      	ADIW R26,12
0002bf d012      	RCALL __ADDW2R15
0002c0 d01e      	RCALL __GETW1P
0002c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
0002c2 d00f      	RCALL __ADDW2R15
0002c3 d01b      	RCALL __GETW1P
0002c4 dfb2      	RCALL SUBOPT_0x3
0002c5 931a      	ST   -Y,R17
0002c6 930a      	ST   -Y,R16
0002c7 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0002c8 9610      	adiw r26,0
0002c9 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002ca ed80     +LDI R24 , LOW ( 0x7D0 )
0002cb e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002cc 9701     +SBIW R24 , 1
0002cd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002ce 95a8      	wdr
0002cf 9711      	sbiw r26,1
0002d0 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002d1 9508      	ret
                 
                 __ADDW2R15:
0002d2 2400      	CLR  R0
0002d3 0daf      	ADD  R26,R15
0002d4 1db0      	ADC  R27,R0
0002d5 9508      	RET
                 
                 __ANEGW1:
0002d6 95f1      	NEG  R31
0002d7 95e1      	NEG  R30
0002d8 40f0      	SBCI R31,0
0002d9 9508      	RET
                 
                 __CWD1:
0002da 2f6f      	MOV  R22,R31
0002db 0f66      	ADD  R22,R22
0002dc 0b66      	SBC  R22,R22
0002dd 2f76      	MOV  R23,R22
0002de 9508      	RET
                 
                 __GETW1P:
0002df 91ed      	LD   R30,X+
0002e0 91fc      	LD   R31,X
0002e1 9711      	SBIW R26,1
0002e2 9508      	RET
                 
                 __GETW1PF:
0002e3 9005      	LPM  R0,Z+
0002e4 91f4      	LPM  R31,Z
0002e5 2de0      	MOV  R30,R0
0002e6 9508      	RET
                 
                 __PUTPARD1:
0002e7 937a      	ST   -Y,R23
0002e8 936a      	ST   -Y,R22
0002e9 93fa      	ST   -Y,R31
0002ea 93ea      	ST   -Y,R30
0002eb 9508      	RET
                 
                 __SAVELOCR6:
0002ec 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002ed 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002ee 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002ef 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002f0 931a      	ST   -Y,R17
0002f1 930a      	ST   -Y,R16
0002f2 9508      	RET
                 
                 __LOADLOCR6:
0002f3 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002f4 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002f5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002f6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002f7 8119      	LDD  R17,Y+1
0002f8 8108      	LD   R16,Y
0002f9 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   2 r5 :   0 r6 :   2 r7 :   0 
r8 :   2 r9 :   0 r10:   2 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  33 r17:  22 r18:  29 r19:   8 r20:   9 r21:  17 r22:   9 r23:   2 
r24:  13 r25:   2 r26:  73 r27:  29 r28:  20 r29:   1 r30: 146 r31:  50 
x  :  18 y  : 115 z  :   7 
Registers used: 25 out of 35 (71.4%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  26 and   :   0 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  23 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :  10 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   7 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   3 
cpc   :   2 cpi   :  31 cpse  :   0 dec   :   2 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 in    :   2 
inc   :   0 ld    :  15 ldd   :  61 ldi   :  90 lds   :   0 lpm   :   7 
lsl   :   0 lsr   :   0 mov   :  16 movw  :  23 mul   :   1 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   0 ori   :   7 out   :  20 
pop   :   2 push  :   2 rcall : 112 ret   :  34 reti  :   0 rjmp  :  83 
rol   :   0 ror   :   0 sbc   :   2 sbci  :   1 sbi   :   6 sbic  :   0 
sbis  :   2 sbiw  :  16 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  36 std   :  23 
sts   :   0 sub   :   1 subi  :  13 swap  :   0 tst   :   4 wdr   :   1 

Instructions used: 47 out of 114 (41.2%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005f4   1466     58   1524    8192  18.6%
[.dseg] 0x000060 0x000174      0     20     20    1024   2.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
